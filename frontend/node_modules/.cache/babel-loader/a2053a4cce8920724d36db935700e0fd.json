{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/pages/news.js\";\nimport React, { useEffect, useState } from 'react';\nimport news from '../assets/news.jpg';\n/*const api = {\n  key: '1147083ab9a3466d9332ac26b5a5c2d0',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}*/\n\nexport const News = () => {\n  const [news, setNews] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  useEffect(() => {\n    fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=1147083ab9a3466d9332ac26b5a5c2d0').then(res => res.json()).then(res => setNews(res.network.stations));\n  }, []);\n\n  const NewsAPI = require('newsapi');\n\n  const newsapi = new NewsAPI('1147083ab9a3466d9332ac26b5a5c2d0'); // To query /v2/everything\n  // You must include at least one q, source, or domain\n\n  newsapi.v2.everything({\n    q: 'bitcoin',\n    sources: 'bbc-news,the-verge',\n    domains: 'bbc.co.uk, techcrunch.com',\n    from: '2017-12-01',\n    to: '2017-12-12',\n    language: 'en',\n    sortBy: 'relevancy',\n    page: 2\n  }).then(response => {\n    console.log(response);\n    /*\n      {\n        status: \"ok\",\n        articles: [...]\n      }\n    */\n  }); // To query sources\n  // All options are optional\n\n  newsapi.v2.sources({\n    category: 'technology',\n    language: 'en',\n    country: 'us'\n  }).then(response => {\n    console.log(response);\n    setNews(response.network.stations);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"NewsApp\"), /*#__PURE__*/React.createElement(NewsAPI, {\n    article: news,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/news.js"],"names":["React","useEffect","useState","news","News","setNews","newFilter","setNewFilter","fetch","then","res","json","network","stations","NewsAPI","require","newsapi","v2","everything","q","sources","domains","from","to","language","sortBy","page","response","console","log","category","country"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA;;;;;AAKA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACtB,QAAM,CAACD,IAAD,EAAOE,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAECD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CACH,yFADG,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISC,GAAD,IAASL,OAAO,CAACK,GAAG,CAACE,OAAJ,CAAYC,QAAb,CAJxB;AAKD,GANQ,EAMN,EANM,CAAT;;AAQD,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAY,kCAAZ,CAAhB,CAbsB,CAetB;AACA;;AACAE,EAAAA,OAAO,CAACC,EAAR,CAAWC,UAAX,CAAsB;AAClBC,IAAAA,CAAC,EAAE,SADe;AAElBC,IAAAA,OAAO,EAAE,oBAFS;AAGlBC,IAAAA,OAAO,EAAE,2BAHS;AAIlBC,IAAAA,IAAI,EAAE,YAJY;AAKlBC,IAAAA,EAAE,EAAE,YALc;AAMlBC,IAAAA,QAAQ,EAAE,IANQ;AAOlBC,IAAAA,MAAM,EAAE,WAPU;AAQlBC,IAAAA,IAAI,EAAE;AARY,GAAtB,EASGjB,IATH,CASQkB,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;;;;;AAMH,GAjBD,EAjBsB,CAmCtB;AACA;;AACAX,EAAAA,OAAO,CAACC,EAAR,CAAWG,OAAX,CAAmB;AACfU,IAAAA,QAAQ,EAAE,YADK;AAEfN,IAAAA,QAAQ,EAAE,IAFK;AAGfO,IAAAA,OAAO,EAAE;AAHM,GAAnB,EAIGtB,IAJH,CAIQkB,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAtB,IAAAA,OAAO,CAACsB,QAAQ,CAACf,OAAT,CAAiBC,QAAlB,CAAP;AACH,GAPD;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEV,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAnDM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport news from '../assets/news.jpg'\n\n/*const api = {\n  key: '1147083ab9a3466d9332ac26b5a5c2d0',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}*/\n\nexport const News = () => {\n    const [news, setNews] = useState([])\n    const [newFilter, setNewFilter] = useState('')\n\n     useEffect(() => {\n       fetch(\n         'https://newsapi.org/v2/top-headlines?country=us&apiKey=1147083ab9a3466d9332ac26b5a5c2d0'\n       )\n         .then((res) => res.json())\n         .then((res) => setNews(res.network.stations))\n     }, [])\n\n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('1147083ab9a3466d9332ac26b5a5c2d0');\n   \n    // To query /v2/everything\n    // You must include at least one q, source, or domain\n    newsapi.v2.everything({\n        q: 'bitcoin',\n        sources: 'bbc-news,the-verge',\n        domains: 'bbc.co.uk, techcrunch.com',\n        from: '2017-12-01',\n        to: '2017-12-12',\n        language: 'en',\n        sortBy: 'relevancy',\n        page: 2\n    }).then(response => {\n        console.log(response);\n        /*\n          {\n            status: \"ok\",\n            articles: [...]\n          }\n        */\n    });\n    // To query sources\n    // All options are optional\n    newsapi.v2.sources({\n        category: 'technology',\n        language: 'en',\n        country: 'us'\n    }).then(response => {\n        console.log(response);\n        setNews(response.network.stations)\n    });\n    return (\n        <div className=\"pages\">\n            <h1>NewsApp</h1>\n            <NewsAPI article={news} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}