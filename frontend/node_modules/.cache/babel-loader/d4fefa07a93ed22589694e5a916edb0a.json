{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/pages/news.js\";\nimport React, { useEffect, useState } from 'react';\nimport news from '../assets/news.jpg';\n/*const api = {\n  key: '1147083ab9a3466d9332ac26b5a5c2d0',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}*/\n\nexport const News = () => {\n  const [news, setNews] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  /*useEffect(() => {\n       fetch('https://api.citybik.es/v2/networks/citybikes-helsinki')\n         .then((res) => res.json())\n         .then((res) => .then((res) => setNews(res.network.stations)))\n     }, [])*/\n\n  const NewsAPI = require('newsapi');\n\n  const newsapi = new NewsAPI('1147083ab9a3466d9332ac26b5a5c2d0'); // To query /v2/top-headlines\n  // All options passed to topHeadlines are optional, but you need to include at least one of them\n\n  newsapi.v2.topHeadlines({\n    sources: 'bbc-news,the-verge',\n    q: 'bitcoin',\n    category: 'business',\n    language: 'en',\n    country: 'us'\n  }).then(response => {\n    console.log(response);\n    /*\n        {\n          status: \"ok\",\n          articles: [...]\n        }\n      */\n  }); // To query /v2/everything\n  // You must include at least one q, source, or domain\n\n  newsapi.v2.everything({\n    q: 'bitcoin',\n    sources: 'bbc-news,the-verge',\n    domains: 'bbc.co.uk, techcrunch.com',\n    from: '2017-12-01',\n    to: '2017-12-12',\n    language: 'en',\n    sortBy: 'relevancy',\n    page: 2\n  }).then(response => {\n    console.log(response);\n    /*\n        {\n          status: \"ok\",\n          articles: [...]\n        }\n      */\n  }); // To query sources\n  // All options are optional\n\n  newsapi.v2.sources({\n    category: 'technology',\n    language: 'en',\n    country: 'us'\n  }).then(response => {\n    console.log(response);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"NewsApp\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"assetsImage\",\n    alt: \"Welcoming page\",\n    src: news,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/news.js"],"names":["React","useEffect","useState","news","News","setNews","newFilter","setNewFilter","NewsAPI","require","newsapi","v2","topHeadlines","sources","q","category","language","country","then","response","console","log","everything","domains","from","to","sortBy","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA;;;;;AAKA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAM,CAACD,IAAD,EAAOE,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEA;;;;;;AAMA,QAAMM,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAY,kCAAZ,CAAhB,CAXwB,CAYxB;AACA;;AACAE,EAAAA,OAAO,CAACC,EAAR,CACGC,YADH,CACgB;AACZC,IAAAA,OAAO,EAAE,oBADG;AAEZC,IAAAA,CAAC,EAAE,SAFS;AAGZC,IAAAA,QAAQ,EAAE,UAHE;AAIZC,IAAAA,QAAQ,EAAE,IAJE;AAKZC,IAAAA,OAAO,EAAE;AALG,GADhB,EAQGC,IARH,CAQSC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;;;;;AAMD,GAhBH,EAdwB,CA+BxB;AACA;;AACAT,EAAAA,OAAO,CAACC,EAAR,CACGW,UADH,CACc;AACVR,IAAAA,CAAC,EAAE,SADO;AAEVD,IAAAA,OAAO,EAAE,oBAFC;AAGVU,IAAAA,OAAO,EAAE,2BAHC;AAIVC,IAAAA,IAAI,EAAE,YAJI;AAKVC,IAAAA,EAAE,EAAE,YALM;AAMVT,IAAAA,QAAQ,EAAE,IANA;AAOVU,IAAAA,MAAM,EAAE,WAPE;AAQVC,IAAAA,IAAI,EAAE;AARI,GADd,EAWGT,IAXH,CAWSC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;;;;;AAMD,GAnBH,EAjCwB,CAqDxB;AACA;;AACAT,EAAAA,OAAO,CAACC,EAAR,CACGE,OADH,CACW;AACPE,IAAAA,QAAQ,EAAE,YADH;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,OAAO,EAAE;AAHF,GADX,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GARH;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAC,gBAAjC;AAAkD,IAAA,GAAG,EAAEhB,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAtEM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport news from '../assets/news.jpg'\n\n/*const api = {\n  key: '1147083ab9a3466d9332ac26b5a5c2d0',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}*/\n\nexport const News = () => {\n  const [news, setNews] = useState([])\n  const [newFilter, setNewFilter] = useState('')\n\n  /*useEffect(() => {\n       fetch('https://api.citybik.es/v2/networks/citybikes-helsinki')\n         .then((res) => res.json())\n         .then((res) => .then((res) => setNews(res.network.stations)))\n     }, [])*/\n\n  const NewsAPI = require('newsapi')\n  const newsapi = new NewsAPI('1147083ab9a3466d9332ac26b5a5c2d0')\n  // To query /v2/top-headlines\n  // All options passed to topHeadlines are optional, but you need to include at least one of them\n  newsapi.v2\n    .topHeadlines({\n      sources: 'bbc-news,the-verge',\n      q: 'bitcoin',\n      category: 'business',\n      language: 'en',\n      country: 'us',\n    })\n    .then((response) => {\n      console.log(response)\n      /*\n          {\n            status: \"ok\",\n            articles: [...]\n          }\n        */\n    })\n  // To query /v2/everything\n  // You must include at least one q, source, or domain\n  newsapi.v2\n    .everything({\n      q: 'bitcoin',\n      sources: 'bbc-news,the-verge',\n      domains: 'bbc.co.uk, techcrunch.com',\n      from: '2017-12-01',\n      to: '2017-12-12',\n      language: 'en',\n      sortBy: 'relevancy',\n      page: 2,\n    })\n    .then((response) => {\n      console.log(response)\n      /*\n          {\n            status: \"ok\",\n            articles: [...]\n          }\n        */\n    })\n  // To query sources\n  // All options are optional\n  newsapi.v2\n    .sources({\n      category: 'technology',\n      language: 'en',\n      country: 'us',\n    })\n    .then((response) => {\n      console.log(response)\n    })\n  return (\n    <div className=\"pages\">\n      <h1>NewsApp</h1>\n      <img className=\"assetsImage\" alt=\"Welcoming page\" src={news}></img>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}