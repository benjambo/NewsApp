{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/pages/weather.js\";\nimport React, { useState } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/'\n};\nexport const Weather = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [apiError, setapiError] = useState('');\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        setapiError(result.message);\n      }).catch(err => {\n        console.log(err.message);\n      });\n    }\n  }; // Formating date\n\n\n  const dateFormat = () => {\n    let date = new Intl.DateTimeFormat('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric'\n    }).format();\n    return date;\n  }; // Handle user input in search field\n\n\n  const handleFilterChange = event => {\n    setQuery(event.target.value);\n    console.log(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    config: {\n      duration: 800\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(\"div\", {\n    style: props,\n    className: typeof weather.main != 'undefined' ? weather.main.temp > 16 ? 'weather warm' : 'weather cold' : 'weather',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search...\",\n    onChange: handleFilterChange,\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), typeof weather.main != 'undefined' ? /*#__PURE__*/React.createElement(\"div\", {\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, dateFormat())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, ' ', Math.round(weather.main.temp), \"\\xB0c\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, weather.weather[0].main))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \"Search for Weather by City\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, apiError))))));\n};\nexport default Weather;","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/weather.js"],"names":["React","useState","Spring","api","key","base","Weather","query","setQuery","weather","setWeather","apiError","setapiError","search","evt","fetch","then","res","json","result","message","catch","err","console","log","dateFormat","date","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","handleFilterChange","event","target","value","opacity","duration","props","main","temp","name","sys","country","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Spring } from 'react-spring/renderprops'\n\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}\n\nexport const Weather = () => {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n  const [apiError, setapiError] = useState('')\n\n  const search = (evt) => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result)\n          setQuery('')\n          setapiError(result.message)\n        })\n        .catch((err) => {\n          console.log(err.message)\n        })\n    }\n  }\n\n  // Formating date\n  const dateFormat = () => {\n    let date = new Intl.DateTimeFormat('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n    }).format()\n    return date\n  }\n\n  // Handle user input in search field\n  const handleFilterChange = (event) => {\n    setQuery(event.target.value)\n    console.log(event.target.value)\n  }\n\n  return (\n    <div className=\"pages\">\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ duration: 800 }}\n      >\n        {(props) => (\n          <div\n            style={props}\n            className={\n              typeof weather.main != 'undefined'\n                ? weather.main.temp > 16\n                  ? 'weather warm'\n                  : 'weather cold'\n                : 'weather'\n            }\n          >\n            <main>\n              <div className=\"search-box\">\n                <input\n                  type=\"text\"\n                  className=\"search-bar\"\n                  placeholder=\"Search...\"\n                  onChange={handleFilterChange}\n                  value={query}\n                  onKeyPress={search}\n                />\n              </div>\n              \n              {typeof weather.main != 'undefined' ? (\n                \n                <div style={props}>\n                  <div className=\"location-box\">\n                    <div className=\"location\">\n                      {weather.name}, {weather.sys.country}\n                    </div>\n                    <div className=\"date\">{dateFormat()}</div>\n                  </div>\n                  <div className=\"weather-box\">\n                    <div className=\"temp\">\n                      {' '}\n                      {Math.round(weather.main.temp)}°c\n                    </div>\n                    <div className=\"weather-description\">\n                      {weather.weather[0].main}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"weather-empty\">\n                  <p>Search for Weather by City</p>\n                  <p>{apiError}</p>\n                </div>\n              )}\n            </main>\n          </div>\n        )}\n      </Spring>\n    </div>\n  )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}