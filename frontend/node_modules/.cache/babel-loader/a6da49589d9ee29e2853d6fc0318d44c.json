{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/components/News.js\";\nimport React from 'react';\nimport { getArticles, getPreArticles } from '../api/api';\nimport ArticleList from './ArticleList';\nimport SearchBar from './SearchBar';\nimport { Container, Header } from 'semantic-ui-react';\n\nclass News extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      preArticles: [],\n      searchTopic: '',\n      totalResults: '',\n      loading: false,\n      apiError: ''\n    };\n\n    this.searchForTopic = async topic => {\n      try {\n        this.setState({\n          loading: true\n        });\n        const response = await getArticles(topic);\n        this.setState({\n          articles: response.articles,\n          searchTopic: topic,\n          totalResults: response.totalResults\n        });\n      } catch (error) {\n        this.setState({\n          apiError: 'Could not find any articles'\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getPreArticles();\n      this.setState({\n        articles: response.articles\n      });\n    } catch (error) {\n      this.setState({\n        apiError: 'Could not find any articles'\n      });\n    }\n  }\n\n  render() {\n    const {\n      preArticles,\n      articles,\n      apiError,\n      loading,\n      searchTopic,\n      totalResults\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      style: {\n        textAlign: 'center',\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Search for a news topic\"), /*#__PURE__*/React.createElement(SearchBar, {\n      searchForTopic: this.searchForTopic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Powered by\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://newsapi.org/\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"NewsAPI.org\")), loading && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Searching for articles...\"), articles.length > 0 && articles.length != 0( /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      style: {\n        textAlign: 'center',\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Found \", totalResults, \" articles on \\\"\", searchTopic, \"\\\"\")), articles.length > 0 && /*#__PURE__*/React.createElement(ArticleList, {\n      articles: articles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }), apiError && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }\n    }, \"Could not fetch any articles. Please try again.\"), preArticles.length > 0 && /*#__PURE__*/React.createElement(ArticleList, {\n      articles: preArticles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }\n    }));\n  }\n\n}\n\nexport default News;\n/*import React, { useState, useEffect } from 'react'\n//import ArticleList from '../components/ArticleList'\n//import SearchBar from '../components/SearchBar'\nimport { Container, Header, Button, Form, Grid, Image, List } from 'semantic-ui-react'\nimport { NEWS_API_KEY } from '../config'\n\nexport const News = () => {\n  const [articles, setArticles] = useState([])\n  const [apiError, setapiError] = useState('')\n  const [searchNews, setSearchNews] = useState('')\n  const [totalResults, setTotalResults] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetch(\n      `https://newsapi.org/v2/everything?domains=techcrunch.com,thenextweb.com&language=en&sortBy=publishedAt&apiKey=${NEWS_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((res) => setArticles(res.articles))\n      .then((res) => setTotalResults(res.totalResults))\n      .then(() => setLoading(true))\n      .catch((err) => {\n        setapiError(err)\n        console.log(err)\n      })\n  }, [])\n\n  const SearchItem = ({ allNews }) => {\n    const mapNews = () =>\n      allNews\n        .filter((articleName) =>\n          articleName.title.toLowerCase().includes(searchNews.toLowerCase())\n        )\n        .map((article) => (\n          <List.Item style={{ padding: 30 }}>\n            <Grid>\n              <Grid.Column\n                width={11}\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'flex-start',\n                }}\n              >\n                <Header as=\"h3\">{article.title}</Header>\n                <List.Description style={{ margin: '20px 0' }}>\n                  {article.description}\n                </List.Description>\n                <List bulleted horizontal>\n                  <List.Item>\n                    <a href={article.url}>{article.source.name}</a>\n                  </List.Item>\n                  <List.Item>{article.publishedAt.split('T')[0]}</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={5}>\n                <Image src={article.urlToImage} />\n              </Grid.Column>\n            </Grid>\n          </List.Item>\n        ))\n  return <div>{mapNews()}</div>\n  }\n\n  const searchHandler = (event) => {\n    setSearchNews(event.target.value)\n  }\n\n  return (\n    <div className=\"pages\">\n      <Container>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Form>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"Search topic\"\n                name=\"topic\"\n                value={searchNews}\n                onChange={searchHandler}\n                onKeyPress={searchHandler}\n              />\n              <Button type=\"submit\" color=\"green\">\n                Search\n              </Button>\n            </Form.Group>\n          </Form>\n        </div>\n        <Header as=\"h2\" style={{ textAlign: 'center', margin: 20 }}>\n          News articles\n        </Header>\n        {articles.length > 0 && (\n          <Header as=\"h4\" style={{ textAlign: 'center', margin: 20 }}>\n            Found {totalResults} articles on \"{searchNews}\"\n          </Header>\n        )}\n        <SearchItem allNews={articles} />\n      </Container>\n    </div>\n  )\n}\n\nexport default News*/","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/components/News.js"],"names":["React","getArticles","getPreArticles","ArticleList","SearchBar","Container","Header","News","Component","state","articles","preArticles","searchTopic","totalResults","loading","apiError","searchForTopic","topic","setState","response","error","componentDidMount","render","textAlign","margin","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { getArticles, getPreArticles } from '../api/api'\nimport ArticleList from './ArticleList'\nimport SearchBar from './SearchBar'\nimport { Container, Header } from 'semantic-ui-react'\n\nclass News extends React.Component {\n  state = {\n    articles: [],\n    preArticles: [],\n    searchTopic: '',\n    totalResults: '',\n    loading: false,\n    apiError: '',\n  }\n\n  searchForTopic = async (topic) => {\n    try {\n      this.setState({ loading: true })\n      const response = await getArticles(topic)\n      this.setState({\n        articles: response.articles,\n        searchTopic: topic,\n        totalResults: response.totalResults,\n      })\n    } catch (error) {\n      this.setState({ apiError: 'Could not find any articles' })\n    }\n    this.setState({ loading: false })\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getPreArticles()\n      this.setState({ articles: response.articles })\n    } catch (error) {\n      this.setState({ apiError: 'Could not find any articles' })\n    }\n  }\n\n  render() {\n    const {\n      preArticles,\n      articles,\n      apiError,\n      loading,\n      searchTopic,\n      totalResults,\n    } = this.state\n    return (\n      <Container className=\"pages\">\n        <Header as=\"h2\" style={{ textAlign: 'center', margin: 20 }}>\n          Search for a news topic\n        </Header>\n        <SearchBar searchForTopic={this.searchForTopic} />\n        <p style={{ textAlign: 'center' }}>\n          Powered by{' '}\n          <a\n            href=\"https://newsapi.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NewsAPI.org\n          </a>\n        </p>\n        {loading && (\n          <p style={{ textAlign: 'center' }}>Searching for articles...</p>\n        )}\n        {articles.length > 0 && articles.length != 0 (\n          <Header as=\"h4\" style={{ textAlign: 'center', margin: 20 }}>\n            Found {totalResults} articles on \"{searchTopic}\"\n          </Header>\n        )}\n        {articles.length > 0 && <ArticleList articles={articles} />}\n        {apiError && <p>Could not fetch any articles. Please try again.</p>}\n        {preArticles.length > 0 && <ArticleList articles={preArticles} />}\n      </Container>\n    )\n  }\n}\n\nexport default News\n\n/*import React, { useState, useEffect } from 'react'\n//import ArticleList from '../components/ArticleList'\n//import SearchBar from '../components/SearchBar'\nimport { Container, Header, Button, Form, Grid, Image, List } from 'semantic-ui-react'\nimport { NEWS_API_KEY } from '../config'\n\nexport const News = () => {\n  const [articles, setArticles] = useState([])\n  const [apiError, setapiError] = useState('')\n  const [searchNews, setSearchNews] = useState('')\n  const [totalResults, setTotalResults] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetch(\n      `https://newsapi.org/v2/everything?domains=techcrunch.com,thenextweb.com&language=en&sortBy=publishedAt&apiKey=${NEWS_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((res) => setArticles(res.articles))\n      .then((res) => setTotalResults(res.totalResults))\n      .then(() => setLoading(true))\n      .catch((err) => {\n        setapiError(err)\n        console.log(err)\n      })\n  }, [])\n\n  const SearchItem = ({ allNews }) => {\n    const mapNews = () =>\n      allNews\n        .filter((articleName) =>\n          articleName.title.toLowerCase().includes(searchNews.toLowerCase())\n        )\n        .map((article) => (\n          <List.Item style={{ padding: 30 }}>\n            <Grid>\n              <Grid.Column\n                width={11}\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'flex-start',\n                }}\n              >\n                <Header as=\"h3\">{article.title}</Header>\n                <List.Description style={{ margin: '20px 0' }}>\n                  {article.description}\n                </List.Description>\n                <List bulleted horizontal>\n                  <List.Item>\n                    <a href={article.url}>{article.source.name}</a>\n                  </List.Item>\n                  <List.Item>{article.publishedAt.split('T')[0]}</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={5}>\n                <Image src={article.urlToImage} />\n              </Grid.Column>\n            </Grid>\n          </List.Item>\n        ))\n  return <div>{mapNews()}</div>\n  }\n\n  const searchHandler = (event) => {\n    setSearchNews(event.target.value)\n  }\n\n  return (\n    <div className=\"pages\">\n      <Container>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Form>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"Search topic\"\n                name=\"topic\"\n                value={searchNews}\n                onChange={searchHandler}\n                onKeyPress={searchHandler}\n              />\n              <Button type=\"submit\" color=\"green\">\n                Search\n              </Button>\n            </Form.Group>\n          </Form>\n        </div>\n        <Header as=\"h2\" style={{ textAlign: 'center', margin: 20 }}>\n          News articles\n        </Header>\n        {articles.length > 0 && (\n          <Header as=\"h4\" style={{ textAlign: 'center', margin: 20 }}>\n            Found {totalResults} articles on \"{searchNews}\"\n          </Header>\n        )}\n        <SearchItem allNews={articles} />\n      </Container>\n    </div>\n  )\n}\n\nexport default News*/\n"]},"metadata":{},"sourceType":"module"}