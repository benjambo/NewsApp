{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/pages/news.js\";\nimport React, { useEffect, useState } from 'react';\nimport news from '../assets/news.jpg';\nexport const News = () => {\n  const [bike, setBike] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n\n  const NewsAPI = require('newsapi');\n\n  const newsapi = new NewsAPI('1147083ab9a3466d9332ac26b5a5c2d0'); // To query /v2/top-headlines\n  // All options passed to topHeadlines are optional, but you need to include at least one of them\n\n  newsapi.v2.topHeadlines({\n    sources: 'bbc-news,the-verge',\n    q: 'bitcoin',\n    category: 'business',\n    language: 'en',\n    country: 'us'\n  }).then(response => {\n    console.log(response);\n    /*\n      {\n        status: \"ok\",\n        articles: [...]\n      }\n    */\n  }); // To query /v2/everything\n  // You must include at least one q, source, or domain\n\n  newsapi.v2.everything({\n    q: 'bitcoin',\n    sources: 'bbc-news,the-verge',\n    domains: 'bbc.co.uk, techcrunch.com',\n    from: '2017-12-01',\n    to: '2017-12-12',\n    language: 'en',\n    sortBy: 'relevancy',\n    page: 2\n  }).then(response => {\n    console.log(response);\n    /*\n      {\n        status: \"ok\",\n        articles: [...]\n      }\n    */\n  }); // To query sources\n  // All options are optional\n\n  newsapi.v2.sources({\n    category: 'technology',\n    language: 'en',\n    country: 'us'\n  }).then(response => {\n    console.log(response);\n    /*\n      {\n        status: \"ok\",\n        sources: [...]\n      }\n    */\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"NewsApp\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"assetsImage\",\n    alt: \"Welcoming page\",\n    src: news,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/news.js"],"names":["React","useEffect","useState","news","News","bike","setBike","newFilter","setNewFilter","NewsAPI","require","newsapi","v2","topHeadlines","sources","q","category","language","country","then","response","console","log","everything","domains","from","to","sortBy","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMO,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAY,kCAAZ,CAAhB,CALsB,CAMtB;AACA;;AACAE,EAAAA,OAAO,CAACC,EAAR,CAAWC,YAAX,CAAwB;AACpBC,IAAAA,OAAO,EAAE,oBADW;AAEpBC,IAAAA,CAAC,EAAE,SAFiB;AAGpBC,IAAAA,QAAQ,EAAE,UAHU;AAIpBC,IAAAA,QAAQ,EAAE,IAJU;AAKpBC,IAAAA,OAAO,EAAE;AALW,GAAxB,EAMGC,IANH,CAMQC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;;;;;AAMH,GAdD,EARsB,CAuBtB;AACA;;AACAT,EAAAA,OAAO,CAACC,EAAR,CAAWW,UAAX,CAAsB;AAClBR,IAAAA,CAAC,EAAE,SADe;AAElBD,IAAAA,OAAO,EAAE,oBAFS;AAGlBU,IAAAA,OAAO,EAAE,2BAHS;AAIlBC,IAAAA,IAAI,EAAE,YAJY;AAKlBC,IAAAA,EAAE,EAAE,YALc;AAMlBT,IAAAA,QAAQ,EAAE,IANQ;AAOlBU,IAAAA,MAAM,EAAE,WAPU;AAQlBC,IAAAA,IAAI,EAAE;AARY,GAAtB,EASGT,IATH,CASQC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;;;;;AAMH,GAjBD,EAzBsB,CA2CtB;AACA;;AACAT,EAAAA,OAAO,CAACC,EAAR,CAAWE,OAAX,CAAmB;AACfE,IAAAA,QAAQ,EAAE,YADK;AAEfC,IAAAA,QAAQ,EAAE,IAFK;AAGfC,IAAAA,OAAO,EAAE;AAHM,GAAnB,EAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;;;;;AAMH,GAZD;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAC,gBAAjC;AAAkD,IAAA,GAAG,EAAEjB,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAhEM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport news from '../assets/news.jpg'\n\nexport const News = () => {\n    const [bike, setBike] = useState([])\n    const [newFilter, setNewFilter] = useState('')\n    \n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('1147083ab9a3466d9332ac26b5a5c2d0');\n    // To query /v2/top-headlines\n    // All options passed to topHeadlines are optional, but you need to include at least one of them\n    newsapi.v2.topHeadlines({\n        sources: 'bbc-news,the-verge',\n        q: 'bitcoin',\n        category: 'business',\n        language: 'en',\n        country: 'us'\n    }).then(response => {\n        console.log(response);\n        /*\n          {\n            status: \"ok\",\n            articles: [...]\n          }\n        */\n    });\n    // To query /v2/everything\n    // You must include at least one q, source, or domain\n    newsapi.v2.everything({\n        q: 'bitcoin',\n        sources: 'bbc-news,the-verge',\n        domains: 'bbc.co.uk, techcrunch.com',\n        from: '2017-12-01',\n        to: '2017-12-12',\n        language: 'en',\n        sortBy: 'relevancy',\n        page: 2\n    }).then(response => {\n        console.log(response);\n        /*\n          {\n            status: \"ok\",\n            articles: [...]\n          }\n        */\n    });\n    // To query sources\n    // All options are optional\n    newsapi.v2.sources({\n        category: 'technology',\n        language: 'en',\n        country: 'us'\n    }).then(response => {\n        console.log(response);\n        /*\n          {\n            status: \"ok\",\n            sources: [...]\n          }\n        */\n    });\n    return (\n        <div className=\"pages\">\n            <h1>NewsApp</h1>\n            <img className=\"assetsImage\" alt=\"Welcoming page\" src={news}></img>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}