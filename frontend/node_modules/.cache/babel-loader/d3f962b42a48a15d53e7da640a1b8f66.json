{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/pages/signUp.js\";\nimport React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport axios from 'axios'; //import userService from '../services/accounts';\n\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport styled from 'styled-components';\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n        &:hover {\n            color: #690505;\n        }\n    }\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    .navbar-light .navbar-brand {\n      color: white;\n    }\n    `; // Function to validate if input is acceptable\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // Validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // Validate form if it isn't filled out\n\n  Object.values(rest).forEach(val => {\n    val === '' && (valid = false);\n  });\n  return valid;\n}; // An email validation code\n\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props); // The state of the form to begin with\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // If the format is valid print this to Console\n\n      if (formValid(this.state)) {\n        /*const { users } = this.state;\n        this.setState({\n          users: [...users]\n        });\n        users.push({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        });*/\n        const newUser = {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        };\n        axios.post('http://localhost:3001/user/signup', newUser).then(res => {\n          if (res.status === 201) {\n            window.location = '/';\n          } else {\n            window.location = '#/signup';\n          }\n\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n        console.log(this.state);\n      } else {\n        confirmAlert({\n          title: 'Error',\n          message: 'Failed to signup. Please try again',\n          buttons: [{\n            label: 'Ok'\n          }]\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let formErrors = this.state.formErrors; // Swith statement for form input rules\n\n      switch (name) {\n        case 'firstName':\n          formErrors.firstName = value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n\n        case 'lastName':\n          formErrors.lastName = value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n\n        case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n          break;\n\n        case 'password':\n          formErrors.password = value.length < 6 ? 'minimum 6 characters required' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n      /*, () => console.log(this.state));*/\n    };\n\n    this.state = {\n      //users: userArray,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // The submit handler\n\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      formErrors\n    } = this.state; //const { users } = this.state;\n\n    return /*#__PURE__*/React.createElement(Styles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      config: {\n        duration: 1250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, props => /*#__PURE__*/React.createElement(\"div\", {\n      style: props,\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"/signup\",\n      className: \"forms\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.firstName.length > 0 ? 'error' : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      value: firstName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }), formErrors.firstName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 23\n      }\n    }, formErrors.firstName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.lastName.length > 0 ? 'error' : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }), formErrors.lastName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    }, formErrors.lastName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? 'error' : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }), formErrors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, formErrors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? 'error' : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }), formErrors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, formErrors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 23\n      }\n    }, \"Already Have an Account?\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/signUp.js"],"names":["React","Component","Spring","axios","confirmAlert","styled","Styles","div","formValid","formErrors","rest","valid","Object","values","forEach","val","length","emailRegex","RegExp","SignUp","constructor","props","handleSubmit","event","preventDefault","state","newUser","firstName","lastName","email","password","post","then","res","status","window","location","console","log","catch","err","title","message","buttons","label","handleChange","name","value","target","test","setState","bind","render","opacity","duration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Spring } from 'react-spring/renderprops'\nimport axios from 'axios'\n//import userService from '../services/accounts';\nimport { confirmAlert } from 'react-confirm-alert'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n        &:hover {\n            color: #690505;\n        }\n    }\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    .navbar-light .navbar-brand {\n      color: white;\n    }\n    `\n\n// Function to validate if input is acceptable\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false)\n  })\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false)\n  })\n\n  return valid\n}\n\n// An email validation code\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n)\n\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props)\n\n    // The state of the form to begin with\n    this.state = {\n      //users: userArray,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n      },\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  // The submit handler\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    // If the format is valid print this to Console\n    if (formValid(this.state)) {\n      /*const { users } = this.state;\n      this.setState({\n        users: [...users]\n      });\n      users.push({\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password\n      });*/\n\n      const newUser = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password,\n      }\n\n      axios\n        .post('http://localhost:3001/user/signup', newUser)\n        .then((res) => {\n          if (res.status === 201) {\n            window.location = '/'\n          } else {\n            window.location = '#/signup'\n          }\n          console.log(res)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n      console.log(this.state)\n    } else {\n      confirmAlert({\n        title: 'Error',\n        message: 'Failed to signup. Please try again',\n        buttons: [\n          {\n            label: 'Ok',\n          },\n        ],\n      })\n    }\n  }\n\n  // The Change handler\n  handleChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target\n    let formErrors = this.state.formErrors\n\n    // Swith statement for form input rules\n    switch (name) {\n      case 'firstName':\n        formErrors.firstName =\n          value.length < 2 ? 'minimum 2 characters required' : ''\n        break\n\n      case 'lastName':\n        formErrors.lastName =\n          value.length < 2 ? 'minimum 2 characters required' : ''\n        break\n\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Invald email address'\n        break\n\n      case 'password':\n        formErrors.password =\n          value.length < 6 ? 'minimum 6 characters required' : ''\n        break\n      default:\n        break\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value,\n    }) /*, () => console.log(this.state));*/\n  }\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const { firstName, lastName, email, password, formErrors } = this.state\n    //const { users } = this.state;\n\n    return (\n      <Styles>\n        <Spring\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ duration: 1250 }}\n        >\n          {(props) => (\n            <div style={props} className=\"wrapper\">\n              <div className=\"form-wrapper\">\n                <h1>Create Account</h1>\n                <form\n                  action=\"/signup\"\n                  className=\"forms\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"firstName\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input\n                      className={\n                        formErrors.firstName.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"First Name\"\n                      type=\"text\"\n                      name=\"firstName\"\n                      value={firstName}\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.firstName.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.firstName}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"lastName\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input\n                      className={\n                        formErrors.lastName.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"Last Name\"\n                      type=\"text\"\n                      name=\"lastName\"\n                      value={lastName}\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.lastName.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.lastName}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"email\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      className={formErrors.email.length > 0 ? 'error' : null}\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.email.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.email}</span>\n                    )}\n                  </div>\n                  <div className=\"password\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      className={\n                        formErrors.password.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.password.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.password}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"createAccount\">\n                    <button type=\"submit\">Create Account</button>\n                    <a href=\"#/signin\">\n                      <small>Already Have an Account?</small>\n                    </a>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </Spring>\n      </Styles>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}