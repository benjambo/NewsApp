{"ast":null,"code":"import jwt from \"jsonwebtoken\"; // functions for authentication\n\nexport function isLoggedIn() {\n  const token = localStorage.getItem(\"token\");\n  return token != null;\n}\nexport function logout() {\n  if (isLoggedIn()) {\n    //localStorage.clear();\n    localStorage.removeItem(\"token\");\n  }\n} // to save the token to the browsers localstorage which\n// will keep the session active\n\nexport function setToken(token) {\n  if (getToken() === token) {\n    localStorage.clear();\n    localStorage.setItem(\"token\", token);\n  }\n\n  localStorage.setItem(\"token\", token);\n}\nexport function getToken() {\n  return localStorage.getItem(\"token\");\n}\nexport function decodeToken() {\n  const token = getToken();\n\n  if (!token) {\n    return null;\n  }\n\n  const decodedToken = jwt.decode(token);\n  console.log(\"decoded token:\");\n  console.log(decodedToken);\n  return decodedToken;\n} // User info decoded from Token\n\nexport function getUserId() {\n  // decrypt token to its original data\n  const token = decodeToken();\n\n  if (!token) {\n    return null;\n  }\n\n  return token.id;\n}\nexport function getUserEmail() {\n  // decrypt token to its original data\n  const token = decodeToken();\n\n  if (!token) {\n    return null;\n  }\n\n  return token.email;\n}\nexport function getUserFirstName() {\n  // decrypt token to its original data\n  const token = decodeToken();\n\n  if (!token) {\n    return \"User\";\n  }\n\n  return token.firstName;\n}\nexport function getUserLastName() {\n  // decrypt token to its original data\n  const token = decodeToken();\n\n  if (!token) {\n    return null;\n  }\n\n  return token.lastName;\n}","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/components/auth.js"],"names":["jwt","isLoggedIn","token","localStorage","getItem","logout","removeItem","setToken","getToken","clear","setItem","decodeToken","decodedToken","decode","console","log","getUserId","id","getUserEmail","email","getUserFirstName","firstName","getUserLastName","lastName"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB,C,CAEA;;AACA,OAAO,SAASC,UAAT,GAAsB;AAC3B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAOF,KAAK,IAAI,IAAhB;AACD;AAED,OAAO,SAASG,MAAT,GAAkB;AACvB,MAAIJ,UAAU,EAAd,EAAkB;AAChB;AACAE,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACD;AACF,C,CAED;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBL,KAAlB,EAAyB;AAC9B,MAAIM,QAAQ,OAAON,KAAnB,EAA0B;AACxBC,IAAAA,YAAY,CAACM,KAAb;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACD;;AACDC,EAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACD;AAED,OAAO,SAASM,QAAT,GAAoB;AACzB,SAAOL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD;AAED,OAAO,SAASO,WAAT,GAAuB;AAC5B,QAAMT,KAAK,GAAGM,QAAQ,EAAtB;;AACA,MAAI,CAACN,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,QAAMU,YAAY,GAAGZ,GAAG,CAACa,MAAJ,CAAWX,KAAX,CAArB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,SAAOA,YAAP;AACD,C,CAED;;AACA,OAAO,SAASI,SAAT,GAAqB;AAC1B;AACA,QAAMd,KAAK,GAAGS,WAAW,EAAzB;;AACA,MAAI,CAACT,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,SAAOA,KAAK,CAACe,EAAb;AACD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B;AACA,QAAMhB,KAAK,GAAGS,WAAW,EAAzB;;AACA,MAAI,CAACT,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,SAAOA,KAAK,CAACiB,KAAb;AACD;AACD,OAAO,SAASC,gBAAT,GAA4B;AACjC;AAEA,QAAMlB,KAAK,GAAGS,WAAW,EAAzB;;AACA,MAAI,CAACT,KAAL,EAAY;AACV,WAAO,MAAP;AACD;;AACD,SAAOA,KAAK,CAACmB,SAAb;AACD;AACD,OAAO,SAASC,eAAT,GAA2B;AAChC;AACA,QAAMpB,KAAK,GAAGS,WAAW,EAAzB;;AACA,MAAI,CAACT,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,SAAOA,KAAK,CAACqB,QAAb;AACD","sourcesContent":["import jwt from \"jsonwebtoken\";\n\n// functions for authentication\nexport function isLoggedIn() {\n  const token = localStorage.getItem(\"token\");\n  return token != null;\n}\n\nexport function logout() {\n  if (isLoggedIn()) {\n    //localStorage.clear();\n    localStorage.removeItem(\"token\");\n  }\n}\n\n// to save the token to the browsers localstorage which\n// will keep the session active\nexport function setToken(token) {\n  if (getToken() === token) {\n    localStorage.clear();\n    localStorage.setItem(\"token\", token);\n  }\n  localStorage.setItem(\"token\", token);\n}\n\nexport function getToken() {\n  return localStorage.getItem(\"token\");\n}\n\nexport function decodeToken() {\n  const token = getToken();\n  if (!token) {\n    return null;\n  }\n  const decodedToken = jwt.decode(token);\n  console.log(\"decoded token:\");\n  console.log(decodedToken);\n  return decodedToken;\n}\n\n// User info decoded from Token\nexport function getUserId() {\n  // decrypt token to its original data\n  const token = decodeToken();\n  if (!token) {\n    return null;\n  }\n  return token.id;\n}\n\nexport function getUserEmail() {\n  // decrypt token to its original data\n  const token = decodeToken();\n  if (!token) {\n    return null;\n  }\n  return token.email;\n}\nexport function getUserFirstName() {\n  // decrypt token to its original data\n\n  const token = decodeToken();\n  if (!token) {\n    return \"User\";\n  }\n  return token.firstName;\n}\nexport function getUserLastName() {\n  // decrypt token to its original data\n  const token = decodeToken();\n  if (!token) {\n    return null;\n  }\n  return token.lastName;\n}\n\n"]},"metadata":{},"sourceType":"module"}