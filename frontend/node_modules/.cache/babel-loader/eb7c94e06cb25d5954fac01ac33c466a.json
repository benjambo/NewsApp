{"ast":null,"code":"import _slicedToArray from\"/Users/benjamin/School/NewsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Spring}from'react-spring/renderprops';var api={key:'b8b339cb458fb8bc4985ef3cc4e552a3',base:'https://api.openweathermap.org/data/2.5/'};export var Weather=function Weather(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),apiError=_useState6[0],setapiError=_useState6[1];var search=function search(evt){if(evt.key==='Enter'){fetch(\"\".concat(api.base,\"weather?q=\").concat(query,\"&units=metric&APPID=\").concat(api.key)).then(function(res){return res.json();}).then(function(result){setWeather(result);setQuery('');setapiError(result.message);}).catch(function(err){console.log(err.message);});}};// Formating date\nvar dateFormat=function dateFormat(){var date=new Intl.DateTimeFormat('en-GB',{weekday:'long',year:'numeric',month:'long',day:'2-digit',hour:'numeric',minute:'numeric'}).format();return date;};// Handle user input in search field\nvar handleFilterChange=function handleFilterChange(event){setQuery(event.target.value);console.log(event.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:\"pages\"},/*#__PURE__*/React.createElement(Spring,{from:{opacity:0},to:{opacity:1},config:{duration:800}},function(props){return/*#__PURE__*/React.createElement(\"div\",{style:props,className:typeof weather.main!='undefined'?weather.main.temp>16?'weather warm':'weather cold':'weather'},/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"search-box\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"Search...\",onChange:handleFilterChange,value:query,onKeyPress:search})),typeof weather.main!='undefined'?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"location-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"location\"},weather.name,\", \",weather.sys.country),/*#__PURE__*/React.createElement(\"div\",{className:\"date\"},dateFormat())),/*#__PURE__*/React.createElement(\"div\",{className:\"weather-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"temp\"},' ',Math.round(weather.main.temp),\"\\xB0c\"),/*#__PURE__*/React.createElement(\"div\",{className:\"weather-description\"},weather.weather[0].main))):/*#__PURE__*/React.createElement(\"div\",{className:\"weather-empty\"},/*#__PURE__*/React.createElement(\"p\",null,\"Search for Weather by City\"),/*#__PURE__*/React.createElement(\"p\",null,apiError))));}));};export default Weather;","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/weather.js"],"names":["React","useState","Spring","api","key","base","Weather","query","setQuery","weather","setWeather","apiError","setapiError","search","evt","fetch","then","res","json","result","message","catch","err","console","log","dateFormat","date","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","handleFilterChange","event","target","value","opacity","duration","props","main","temp","name","sys","country","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Spring } from 'react-spring/renderprops'\n\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}\n\nexport const Weather = () => {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n  const [apiError, setapiError] = useState('')\n\n  const search = (evt) => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result)\n          setQuery('')\n          setapiError(result.message)\n        })\n        .catch((err) => {\n          console.log(err.message)\n        })\n    }\n  }\n\n  // Formating date\n  const dateFormat = () => {\n    let date = new Intl.DateTimeFormat('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n    }).format()\n    return date\n  }\n\n  // Handle user input in search field\n  const handleFilterChange = (event) => {\n    setQuery(event.target.value)\n    console.log(event.target.value)\n  }\n\n  return (\n    <div className=\"pages\">\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ duration: 800 }}\n      >\n        {(props) => (\n          <div\n            style={props}\n            className={\n              typeof weather.main != 'undefined'\n                ? weather.main.temp > 16\n                  ? 'weather warm'\n                  : 'weather cold'\n                : 'weather'\n            }\n          >\n            <main>\n              <div className=\"search-box\">\n                <input\n                  type=\"text\"\n                  className=\"search-bar\"\n                  placeholder=\"Search...\"\n                  onChange={handleFilterChange}\n                  value={query}\n                  onKeyPress={search}\n                />\n              </div>\n              {typeof weather.main != 'undefined' ? (\n                <div>\n                  <div className=\"location-box\">\n                    <div className=\"location\">\n                      {weather.name}, {weather.sys.country}\n                    </div>\n                    <div className=\"date\">{dateFormat()}</div>\n                  </div>\n                  <div className=\"weather-box\">\n                    <div className=\"temp\">\n                      {' '}\n                      {Math.round(weather.main.temp)}Â°c\n                    </div>\n                    <div className=\"weather-description\">\n                      {weather.weather[0].main}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"weather-empty\">\n                  <p>Search for Weather by City</p>\n                  <p>{apiError}</p>\n                </div>\n              )}\n            </main>\n          </div>\n        )}\n      </Spring>\n    </div>\n  )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}