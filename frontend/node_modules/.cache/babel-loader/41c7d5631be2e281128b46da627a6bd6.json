{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/pages/weather.js\";\nimport React, { useEffect, useState } from 'react';\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/'\n};\nexport const Weather = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [weatherDef, setWeatherDef] = useState({});\n  const [apiError, setapiError] = useState('');\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      }).catch(err => setapiError(err.sys.message));\n    }\n  };\n\n  useEffect(() => {\n    fetch(`api.openweathermap.org/data/2.5/weather?q=Helsinki&appid={API key}${api.key}`).then(res => res.json()).then(result => {\n      setWeatherDef(result);\n      console.log(result);\n    });\n  }, []);\n\n  const WeatherItem = ({\n    weathers\n  }) => {\n    const mapWeather = () => weathers.filter(weatherName => weatherName.name).map(weatherDef => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, weatherDef.name, \", \", weatherDef.sys), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, dateFormat())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \" \", Math.round(weatherDef.main), \"\\xB0c\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, weatherDef.main))));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }, mapWeather());\n  }; // Formating date\n\n\n  const dateFormat = () => {\n    let date = new Intl.DateTimeFormat('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric'\n    }).format();\n    return date;\n  }; // Handle user input in search field\n\n\n  const handleFilterChange = event => {\n    setQuery(event.target.value);\n    console.log(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != 'undefined' ? weather.main.temp > 16 ? 'weather warm' : 'weather cold' : 'weather',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search...\",\n    onChange: handleFilterChange,\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), typeof weather.main != 'undefined' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, dateFormat())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \" \", Math.round(weather.main.temp), \"\\xB0c\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, weather.weather[0].main))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WeatherItem, {\n    weathers: weatherDef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default Weather;","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/weather.js"],"names":["React","useEffect","useState","api","key","base","Weather","query","setQuery","weather","setWeather","weatherDef","setWeatherDef","apiError","setapiError","search","evt","fetch","then","res","json","result","console","log","catch","err","sys","message","WeatherItem","weathers","mapWeather","filter","weatherName","name","map","dateFormat","Math","round","main","date","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","handleFilterChange","event","target","value","temp","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}\n\nexport const Weather = () => {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n  const [weatherDef, setWeatherDef] = useState({})\n  const [apiError, setapiError] = useState('')\n\n  const search = (evt) => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result)\n          setQuery('')\n          console.log(result)\n        })\n        .catch((err) => setapiError(err.sys.message))\n    }\n  }\n\n  useEffect(() => {\n    fetch(\n      `api.openweathermap.org/data/2.5/weather?q=Helsinki&appid={API key}${api.key}`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setWeatherDef(result)\n        console.log(result)\n      })\n  }, [])\n\n  const WeatherItem = ({ weathers }) => {\n    const mapWeather = () =>\n      weathers\n        .filter((weatherName) => weatherName.name)\n        .map((weatherDef) => (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weatherDef.name}, {weatherDef.sys}\n              </div>\n              <div className=\"date\">{dateFormat()}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\"> {Math.round(weatherDef.main)}°c</div>\n              <div className=\"weather-description\">{weatherDef.main}</div>\n            </div>\n          </div>\n        ))\n    return <div>{mapWeather()}</div>\n  }\n\n  // Formating date\n  const dateFormat = () => {\n    let date = new Intl.DateTimeFormat('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n    }).format()\n    return date\n  }\n\n  // Handle user input in search field\n  const handleFilterChange = (event) => {\n    setQuery(event.target.value)\n    console.log(event.target.value)\n  }\n\n  return (\n    <div className=\"pages\">\n      <div\n        className={\n          typeof weather.main != 'undefined'\n            ? weather.main.temp > 16\n              ? 'weather warm'\n              : 'weather cold'\n            : 'weather'\n        }\n      >\n        <main>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              className=\"search-bar\"\n              placeholder=\"Search...\"\n              onChange={handleFilterChange}\n              value={query}\n              onKeyPress={search}\n            />\n          </div>\n          {typeof weather.main != 'undefined' ? (\n            <div>\n              <div className=\"location-box\">\n                <div className=\"location\">\n                  {weather.name}, {weather.sys.country}\n                </div>\n                <div className=\"date\">{dateFormat()}</div>\n              </div>\n              <div className=\"weather-box\">\n                <div className=\"temp\"> {Math.round(weather.main.temp)}°c</div>\n                <div className=\"weather-description\">\n                  {weather.weather[0].main}\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"weather-empty\"></div>\n          )}\n          <WeatherItem weathers={weatherDef} />\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}