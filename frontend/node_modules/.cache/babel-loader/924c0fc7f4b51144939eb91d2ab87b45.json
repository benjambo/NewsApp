{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/School/NewsApp/frontend/src/pages/signIn.js\";\nimport React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport axios from 'axios'; //import auth from '../components/auth';\n\nimport styled from 'styled-components';\nimport { setToken } from '../components/auth';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n        &:hover {\n            color: #690505;\n        }\n    }\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    .navbar-light .navbar-brand {\n      color: white;\n      &:hover {\n            color: #690505;\n        }\n    }\n    `; // Function to validate if input is acceptable\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // Validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // Validate form if it isn't filled out\n\n  Object.values(rest).forEach(val => {\n    val === '' && (valid = false);\n  });\n  return valid;\n}; // An email validation code\n\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport class SignIn extends Component {\n  constructor() {\n    super(); // The state of the form to begin with\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // If the format is valid print this to Console\n\n      if (formValid(this.state)) {\n        const oldUser = {\n          email: this.state.email,\n          password: this.state.password\n        };\n        axios.post('http://localhost:3001/user/signin', oldUser).then(res => {\n          if (res.status === 200) {\n            window.location = '/';\n            setToken(res.data.token);\n          } else {\n            window.location = '#/signin';\n          }\n\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n          confirmAlert({\n            title: 'Error',\n            message: 'Failed to signin. Please try again',\n            buttons: [{\n              label: 'Ok'\n            }]\n          });\n        });\n      } else {\n        confirmAlert({\n          title: 'Error',\n          message: 'Failed to login. Please try again',\n          buttons: [{\n            label: 'Ok'\n          }]\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      let formErrors = this.state.formErrors; // Swith statement for form input rules\n\n      switch (name) {\n        case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n          break;\n\n        case 'password':\n          formErrors.password = value.length < 6 ? 'minimum 6 characters required' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      formErrors: {\n        email: '',\n        password: ''\n      }\n    };\n  } // The submit handler\n\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const {\n      email,\n      password,\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Styles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      config: {\n        duration: 1250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, props => /*#__PURE__*/React.createElement(\"div\", {\n      style: props,\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"/\",\n      className: \"forms\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? 'error' : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), formErrors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }, formErrors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? 'error' : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), formErrors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, formErrors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }\n    }, \"Don't Have an Account? Register Here!\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/pages/signIn.js"],"names":["React","Component","Spring","axios","styled","setToken","confirmAlert","Styles","div","formValid","formErrors","rest","valid","Object","values","forEach","val","length","emailRegex","RegExp","SignIn","constructor","handleSubmit","event","preventDefault","state","oldUser","email","password","post","then","res","status","window","location","data","token","console","log","catch","err","title","message","buttons","label","handleChange","name","value","target","test","setState","render","opacity","duration","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Spring } from 'react-spring/renderprops'\nimport axios from 'axios'\n//import auth from '../components/auth';\nimport styled from 'styled-components'\nimport { setToken } from '../components/auth'\nimport { confirmAlert } from 'react-confirm-alert'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n        &:hover {\n            color: #690505;\n        }\n    }\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    .navbar-light .navbar-brand {\n      color: white;\n      &:hover {\n            color: #690505;\n        }\n    }\n    `\n\n// Function to validate if input is acceptable\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false)\n  })\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false)\n  })\n\n  return valid\n}\n\n// An email validation code\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n)\n\nexport class SignIn extends Component {\n  constructor() {\n    super()\n\n    // The state of the form to begin with\n    this.state = {\n      email: '',\n      password: '',\n      formErrors: {\n        email: '',\n        password: '',\n      },\n    }\n  }\n\n  // The submit handler\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    // If the format is valid print this to Console\n    if (formValid(this.state)) {\n      const oldUser = {\n        email: this.state.email,\n        password: this.state.password,\n      }\n\n      axios\n        .post('http://localhost:3001/user/signin', oldUser)\n        .then((res) => {\n          if (res.status === 200) {\n            window.location = '/'\n            setToken(res.data.token)\n          }else {\n            window.location = '#/signin'\n          }\n          console.log(res)\n        })\n        .catch((err) => {\n          console.log(err)\n          confirmAlert({\n            title: 'Error',\n            message: 'Failed to signin. Please try again',\n            buttons: [\n              {\n                label: 'Ok',\n              },\n            ],\n          })\n        })\n    } else {\n      confirmAlert({\n        title: 'Error',\n        message: 'Failed to login. Please try again',\n        buttons: [\n          {\n            label: 'Ok',\n          },\n        ],\n      })\n    }\n  }\n\n  // The Change handler\n  handleChange = (event) => {\n    const { name, value } = event.target\n    let formErrors = this.state.formErrors\n\n    // Swith statement for form input rules\n    switch (name) {\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Invald email address'\n        break\n\n      case 'password':\n        formErrors.password =\n          value.length < 6 ? 'minimum 6 characters required' : ''\n        break\n      default:\n        break\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state))\n  }\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const { email, password, formErrors } = this.state\n\n    return (\n      <Styles>\n        <Spring\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ duration: 1250 }}\n        >\n          {(props) => (\n            <div style={props} className=\"wrapper\">\n              <div className=\"form-wrapper\">\n                <h1>Sign In</h1>\n                <form action=\"/\" className=\"forms\" onSubmit={this.handleSubmit}>\n                  <div className=\"email\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      className={formErrors.email.length > 0 ? 'error' : null}\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.email.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.email}</span>\n                    )}\n                  </div>\n                  <div className=\"password\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      className={\n                        formErrors.password.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.password.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.password}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"createAccount\">\n                    <button type=\"submit\" href=\"/\">\n                      Login\n                    </button>\n                    <a href=\"#/signup\">\n                      <small>Don't Have an Account? Register Here!</small>\n                    </a>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </Spring>\n      </Styles>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}