{"ast":null,"code":"import _slicedToArray from\"/Users/benjamin/School/NewsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';export var FadeInSection=function FadeInSection(props){var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),isVisible=_React$useState2[0],setVisible=_React$useState2[1];var domRef=React.useRef();React.useEffect(function(){var observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){return setVisible(entry.isIntersecting);});});observer.observe(domRef.current);//return () => observer.unobserve(domRef.current)\n},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"fade-in-section \".concat(isVisible?'is-visible':''),ref:domRef},props.children);};","map":{"version":3,"sources":["/Users/benjamin/School/NewsApp/frontend/src/components/FadeInSection.js"],"names":["React","FadeInSection","props","useState","isVisible","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","children"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,qBACNF,KAAK,CAACG,QAAN,CAAe,IAAf,CADM,oDAC/BC,SAD+B,qBACpBC,UADoB,qBAEtC,GAAMC,CAAAA,MAAM,CAAGN,KAAK,CAACO,MAAN,EAAf,CACAP,KAAK,CAACQ,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,oBAAJ,CAAyB,SAACC,OAAD,CAAa,CACrDA,OAAO,CAACC,OAAR,CAAgB,SAACC,KAAD,QAAWR,CAAAA,UAAU,CAACQ,KAAK,CAACC,cAAP,CAArB,EAAhB,EACD,CAFgB,CAAjB,CAGAL,QAAQ,CAACM,OAAT,CAAiBT,MAAM,CAACU,OAAxB,EACA;AACD,CAND,CAMG,EANH,EAOA,mBACE,2BACE,SAAS,2BAAqBZ,SAAS,CAAG,YAAH,CAAkB,EAAhD,CADX,CAEE,GAAG,CAAEE,MAFP,EAIGJ,KAAK,CAACe,QAJT,CADF,CAQD,CAlBM","sourcesContent":["import React from 'react'\n\nexport const FadeInSection = (props) => {\n  const [isVisible, setVisible] = React.useState(true)\n  const domRef = React.useRef()\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => setVisible(entry.isIntersecting))\n    })\n    observer.observe(domRef.current)\n    //return () => observer.unobserve(domRef.current)\n  }, [])\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}