{"version":3,"sources":["assets/cover.jpg","assets/beach.mp4","api/api.js","config.js","components/ArticleList.js","components/SearchBar.js","components/News.js","pages/home.js","pages/weather.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getPreArticles","a","fetch","response","json","getArticles","topic","ArticleItem","props","article","List","Item","style","padding","Grid","Column","only","width","display","flexDirection","justifyContent","Header","as","title","Description","margin","description","bulleted","horizontal","href","url","target","rel","source","name","publishedAt","split","Image","src","urlToImage","ArticleList","divided","maxWidth","articles","map","index","key","SearchBar","handleChange","event","setState","searchTopic","value","handleSubmit","preventDefault","state","alert","searchForTopic","Form","onSubmit","this","Group","Input","placeholder","onChange","Button","type","color","React","Component","News","preArticles","totalResults","loading","apiError","Container","textAlign","length","Home","className","autoPlay","muted","loop","poster","beach","video","textDecoration","fontSize","offset","id","api","Weather","useState","query","setQuery","weather","setWeather","setapiError","search","evt","then","res","result","message","catch","err","console","log","handleFilterChange","from","opacity","to","config","duration","main","temp","onKeyPress","sys","country","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","Math","round","Styles","styled","div","NavigationBar","expanded","setExpanded","Navbar","expand","fixed","Brand","Toggle","area-controls","onClick","Collapse","Nav","Link","NavDropdown","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b39954d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.194e7378.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beach.ef43c5c9.mp4\";","import { NEWS_API_KEY } from '../config'\n\nexport const getPreArticles = async () => {\n  const response = await fetch(\n    `https://newsapi.org/v2/top-headlines?country=us&apiKey=${NEWS_API_KEY}`\n  )\n  const json = await response.json()\n  return json\n}\n\nexport const getArticles = async (topic) => {\n  const response = await fetch(\n    `https://newsapi.org/v2/everything?q=${topic}&language=en&sortBy=publishedAt&apiKey=${NEWS_API_KEY}`\n  )\n  const json = await response.json()\n  return json\n}\n","export const NEWS_API_KEY = '1147083ab9a3466d9332ac26b5a5c2d0'\n","import React from 'react'\nimport { Grid, Header, Image, List } from 'semantic-ui-react'\n\nconst ArticleItem = (props) => {\n  const { article } = props\n  return (\n    <List.Item style={{ padding: 30 }}>\n      <Grid>\n        <Grid.Column\n          only=\"computer\"\n          width={11}\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n          }}\n        >\n          <Header as=\"h3\">{article.title}</Header>\n          <List.Description style={{ margin: '20px 0' }}>\n            {article.description}\n          </List.Description>\n          <List bulleted horizontal>\n            <List.Item>\n              <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {article.source.name}\n              </a>\n            </List.Item>\n            <List.Item>{article.publishedAt.split('T')[0]}</List.Item>\n          </List>\n        </Grid.Column>\n        <Grid.Column width={5} only=\"computer\">\n          <Image src={article.urlToImage} />\n        </Grid.Column>\n        <Grid.Column\n          width={16}\n          only=\"mobile tablet\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n          }}\n        >\n          <Header as=\"h3\">{article.title}</Header>\n          <List.Description style={{ margin: '20px 0' }}>\n            {article.description}\n          </List.Description>\n          <List bulleted horizontal>\n            <List.Item>\n              <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {article.source.name}\n              </a>\n            </List.Item>\n            <List.Item>{article.publishedAt.split('T')[0]}</List.Item>\n          </List>\n        </Grid.Column>\n      </Grid>\n    </List.Item>\n  )\n}\n\nconst ArticleList = (props) => {\n  return (\n    <List divided style={{ maxWidth: 900, margin: '0 auto' }}>\n      {props.articles.map((article, index) => (\n        <ArticleItem article={article} key={article.title + index} />\n      ))}\n    </List>\n  )\n}\n\nexport default ArticleList\n","import React from 'react'\nimport { Button, Form } from 'semantic-ui-react'\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { searchTopic: '' }\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchTopic: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    if (this.state.searchTopic === '') {\n      alert(\"Search field can't be empty\")\n    } else {\n      this.props.searchForTopic(this.state.searchTopic)\n      //this.setState({ searchTopic: \"\" })\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Input\n              placeholder=\"Search topic\"\n              name=\"topic\"\n              value={this.state.searchTopic}\n              onChange={this.handleChange}\n            />\n            <Button type=\"submit\" color=\"green\">\n              Search\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar\n","import React from 'react'\nimport { getArticles, getPreArticles } from '../api/api'\nimport ArticleList from './ArticleList'\nimport SearchBar from './SearchBar'\nimport { Container, Header } from 'semantic-ui-react'\n\nclass News extends React.Component {\n  state = {\n    articles: [],\n    preArticles: [],\n    searchTopic: '',\n    totalResults: '',\n    loading: false,\n    apiError: '',\n  }\n\n  searchForTopic = async (topic) => {\n    try {\n      this.setState({ loading: true })\n      const response = await getArticles(topic)\n      this.setState({\n        articles: response.articles,\n        searchTopic: topic,\n        totalResults: response.totalResults,\n      })\n    } catch (error) {\n      this.setState({ apiError: 'Could not find any articles' })\n    }\n    this.setState({ loading: false })\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getPreArticles()\n      this.setState({ articles: response.articles })\n    } catch (error) {\n      this.setState({ apiError: 'Could not find any articles' })\n    }\n  }\n\n  render() {\n    const {\n      preArticles,\n      articles,\n      apiError,\n      loading,\n      searchTopic,\n      totalResults,\n    } = this.state\n    return (\n      <Container>\n        <Header as=\"h2\" style={{ textAlign: 'center', margin: 20 }}>\n          Search for a news topic\n        </Header>\n        <SearchBar searchForTopic={this.searchForTopic} />\n\n        {loading && (\n          <p style={{ textAlign: 'center' }}>Searching for articles...</p>\n        )}\n        {articles.length > 0 && searchTopic.length !== 0 ? (\n          <Header as=\"h4\" style={{ textAlign: 'center', margin: 20 }}>\n            Found {totalResults} articles on \"{searchTopic}\"\n          </Header>\n        ) : (\n          <Header as=\"h4\" style={{ textAlign: 'center', margin: 20 }}>\n            Trending articles right now\n          </Header>\n        )}\n        {articles.length > 0 && <ArticleList articles={articles} />}\n        {apiError && <p>Could not fetch any articles. Please try again.</p>}\n        {preArticles.length > 0 && <ArticleList articles={preArticles} />}\n        <p style={{ textAlign: 'center' }}>\n          Powered by{' '}\n          <a\n            href=\"https://newsapi.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NewsAPI.org\n          </a>\n        </p>\n      </Container>\n    )\n  }\n}\n\nexport default News\n\n/*import React, { useState, useEffect } from 'react'\n//import ArticleList from '../components/ArticleList'\n//import SearchBar from '../components/SearchBar'\nimport { Container, Header, Button, Form, Grid, Image, List } from 'semantic-ui-react'\nimport { NEWS_API_KEY } from '../config'\n\nexport const News = () => {\n  const [articles, setArticles] = useState([])\n  const [apiError, setapiError] = useState('')\n  const [searchNews, setSearchNews] = useState('')\n  const [totalResults, setTotalResults] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetch(\n      `https://newsapi.org/v2/everything?domains=techcrunch.com,thenextweb.com&language=en&sortBy=publishedAt&apiKey=${NEWS_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((res) => setArticles(res.articles))\n      .then((res) => setTotalResults(res.totalResults))\n      .then(() => setLoading(true))\n      .catch((err) => {\n        setapiError(err)\n        console.log(err)\n      })\n  }, [])\n\n  const SearchItem = ({ allNews }) => {\n    const mapNews = () =>\n      allNews\n        .filter((articleName) =>\n          articleName.title.toLowerCase().includes(searchNews.toLowerCase())\n        )\n        .map((article) => (\n          <List.Item style={{ padding: 30 }}>\n            <Grid>\n              <Grid.Column\n                width={11}\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'flex-start',\n                }}\n              >\n                <Header as=\"h3\">{article.title}</Header>\n                <List.Description style={{ margin: '20px 0' }}>\n                  {article.description}\n                </List.Description>\n                <List bulleted horizontal>\n                  <List.Item>\n                    <a href={article.url}>{article.source.name}</a>\n                  </List.Item>\n                  <List.Item>{article.publishedAt.split('T')[0]}</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={5}>\n                <Image src={article.urlToImage} />\n              </Grid.Column>\n            </Grid>\n          </List.Item>\n        ))\n  return <div>{mapNews()}</div>\n  }\n\n  const searchHandler = (event) => {\n    setSearchNews(event.target.value)\n  }\n\n  return (\n    <div className=\"pages\">\n      <Container>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Form>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"Search topic\"\n                name=\"topic\"\n                value={searchNews}\n                onChange={searchHandler}\n                onKeyPress={searchHandler}\n              />\n              <Button type=\"submit\" color=\"green\">\n                Search\n              </Button>\n            </Form.Group>\n          </Form>\n        </div>\n        <Header as=\"h2\" style={{ textAlign: 'center', margin: 20 }}>\n          News articles\n        </Header>\n        {articles.length > 0 && (\n          <Header as=\"h4\" style={{ textAlign: 'center', margin: 20 }}>\n            Found {totalResults} articles on \"{searchNews}\"\n          </Header>\n        )}\n        <SearchItem allNews={articles} />\n      </Container>\n    </div>\n  )\n}\n\nexport default News*/\n","import React from 'react'\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\nimport { Spring } from 'react-spring/renderprops'\nimport News from '../components/News'\nimport beach from '../assets/cover.jpg'\nimport video from '../assets/beach.mp4'\n\nexport const Home = () => {\n  return (\n    <div className=\"home\">\n      <section className=\"showcase\">\n        <div className=\"video-container\">\n          <video\n            autoPlay=\"autoplay\"\n            muted\n            loop=\"loop\"\n            poster={beach}\n            className=\"myVideo\"\n          >\n            <source className=\"myVideo\" src={video} type=\"video/mp4\" />\n          </video>\n        </div>\n        <div className=\"video-content\">\n          <h1>Welcome to Newsy</h1>\n          <p>\n            This is a website created for you to stay updated on what's\n            happening around the world.\n            <br />\n            Our goal is to let everyone access news from anywhere, anytime for\n            free.\n          </p>\n          <AnchorLink\n            className=\"btn\"\n            style={{\n              textDecoration: 'none',\n              color: 'black',\n              fontSize: 'smaller',\n            }}\n            offset={() => 110}\n            href=\"#news\"\n          >\n            Start Here\n          </AnchorLink>\n        </div>\n      </section>\n      <section id=\"news\">\n        <News />\n        <br />\n      </section>\n    </div>\n  )\n}\n\n/*  <div className=\"pages\">\n            <h1>NewsApp</h1>\n            <img className=\"assetsImage\" alt=\"Welcoming page\" src={news}></img>\n        </div> */\n\n/*<section id=\"about\">\n          <h1 id=\"about\">About</h1>\n          <p>\n            This is a website created for you to stay updated on what's\n            happening around the world. Our goal is to let everyone access news\n            from anywhere anytime for free. Hope you enjoy your experience.\n          </p>\n          <h2>Follow Me On Social Media</h2>\n\n          <div className=\"social\">\n            <a\n              href=\"https://github.com/benjambo\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <i className=\"fab fa-github fa-3x\"></i>\n            </a>\n            <a\n              href=\"https://linkedin.com/in/benschelling\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <i className=\"fab fa-linkedin fa-3x\"></i>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://instagram.com/benjaminjoshin\"\n              rel=\"noopener noreferrer\"\n            >\n              <i className=\"fab fa-instagram fa-3x\" aria-hidden=\"true\" />\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://facebook.com/beni.schelling\"\n              rel=\"noopener noreferrer\"\n            >\n              <i className=\"fab fa-facebook-square fa-3x\" aria-hidden=\"true\" />\n            </a>\n          </div>\n        </section>*/\n","import React, { useState } from 'react'\nimport { Spring } from 'react-spring/renderprops'\n\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}\n\nexport const Weather = () => {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n  const [apiError, setapiError] = useState('')\n\n  const search = (evt) => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result)\n          setQuery('')\n          setapiError(result.message)\n        })\n        .catch((err) => {\n          console.log(err.message)\n        })\n    }\n  }\n\n  // Formating date\n  const dateFormat = () => {\n    let date = new Intl.DateTimeFormat('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n    }).format()\n    return date\n  }\n\n  // Handle user input in search field\n  const handleFilterChange = (event) => {\n    setQuery(event.target.value)\n    console.log(event.target.value)\n  }\n\n  return (\n    <div className=\"pages\">\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ duration: 800 }}\n      >\n        {(props) => (\n          <div\n            style={props}\n            className={\n              typeof weather.main != 'undefined'\n                ? weather.main.temp > 16\n                  ? 'weather warm'\n                  : 'weather cold'\n                : 'weather'\n            }\n          >\n            <main>\n              <div className=\"search-box\">\n                <input\n                  type=\"text\"\n                  className=\"search-bar\"\n                  placeholder=\"Search...\"\n                  onChange={handleFilterChange}\n                  value={query}\n                  onKeyPress={search}\n                />\n              </div>\n              {typeof weather.main != 'undefined' ? (\n                <div>\n                  <div className=\"location-box\">\n                    <div className=\"location\">\n                      {weather.name}, {weather.sys.country}\n                    </div>\n                    <div className=\"date\">{dateFormat()}</div>\n                  </div>\n                  <div className=\"weather-box\">\n                    <div className=\"temp\">\n                      {' '}\n                      {Math.round(weather.main.temp)}°c\n                    </div>\n                    <div className=\"weather-description\">\n                      {weather.weather[0].main}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"weather-empty\">\n                  <p>Search for Weather by City</p>\n                  <p>{apiError}</p>\n                </div>\n              )}\n            </main>\n          </div>\n        )}\n      </Spring>\n    </div>\n  )\n}\n\nexport default Weather\n","import React, { useState } from 'react'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n  form {\n    width: auto;\n  }\n  button {\n    margin: 1vh;\n  }\n  .navbar {\n    background-color: #d9b5a5;\n  }\n  .navbar-default,\n  .collapsed {\n    border-color: white;\n    background-color: white;\n  }\n  .navbar-default,\n  .toggle {\n    background-color: white;\n  }\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: white;\n    margin: 2vh 2vw 2vh 2vw;\n    &:hover {\n      color: #690505;\n    }\n  }\n  .navbar-light .navbar-nav .nav-link {\n    color: white;\n    &:hover {\n      color: #690505;\n    }\n  }\n  .navbar-light .navbar-brand {\n    color: white;\n    &:hover {\n      color: #690505;\n    }\n  }\n  .dropdown {\n    color: black;\n    &:hover {\n      color: #690505;\n    }\n  }\n`\n\nconst NavigationBar = () => {\n  const [expanded, setExpanded] = useState(false)\n  return (\n    <Styles>\n      <Navbar expand=\"lg\" fixed=\"top\" expanded={expanded}>\n        <Navbar.Brand href=\"#/\">Newsy</Navbar.Brand>\n        <Navbar.Toggle\n          area-controls=\"basic-navbar-nav\"\n          onClick={() => setExpanded(expanded ? false : 'expanded')}\n        />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link href=\"#/\" onClick={() => setExpanded(false)}>\n              Home\n            </Nav.Link>\n            <Nav.Link href=\"#/weather\" onClick={() => setExpanded(false)}>\n              Weather\n            </Nav.Link>\n            <NavDropdown title=\"About Us\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://benjambo.github.io/portfolio/#/\"\n                onClick={() => setExpanded(false)}\n              >\n                Benjamin S.\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/Jepu32\"\n                onClick={() => setExpanded(false)}\n              >\n                Jere S.\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </Styles>\n  )\n}\nexport default NavigationBar\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport 'semantic-ui-css/semantic.min.css'\n\n// Pages\nimport { Home } from './pages/home'\nimport News from './components/News'\nimport { Weather } from './pages/weather'\n\n// Components\nimport NavigationBar from './components/NavigationBar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavigationBar />\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/news\" component={News} />\n            <Route path=\"/weather\" component={Weather} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}